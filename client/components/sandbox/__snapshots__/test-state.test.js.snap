// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test-state.js Should shallow render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <div>
      0
    </div>
    <p>
      <button
        id="add-button"
        onClick={[Function]}
      >
        add
      </button>
       
      <button
        id="minus-button"
        onClick={[Function]}
      >
        minus
      </button>
    </p>
  </div>,
  "nodes": Array [
    <div>
      <div>
        0
      </div>
      <p>
        <button
          id="add-button"
          onClick={[Function]}
        >
          add
        </button>
         
        <button
          id="minus-button"
          onClick={[Function]}
        >
          minus
        </button>
      </p>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <TestState
        addLabel="add"
        minusLabel="minus"
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": TestState {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "addLabel": "add",
          "minusLabel": "minus",
        },
        "refs": Object {},
        "state": Object {
          "counter": 0,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <div>
            0
          </div>
          <p>
            <button
              id="add-button"
              onClick={[Function]}
            >
              add
            </button>
             
            <button
              id="minus-button"
              onClick={[Function]}
            >
              minus
            </button>
          </p>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <div>
            0
          </div>
          <p>
            <button
              id="add-button"
              onClick={[Function]}
            >
              add
            </button>
             
            <button
              id="minus-button"
              onClick={[Function]}
            >
              minus
            </button>
          </p>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <TestState
    addLabel="add"
    minusLabel="minus"
  />,
}
`;
